post <- c(post, dice_likelihood(x, dice[i]))
}
df <- data.frame(dice, post=post/sum(post))
return(df)
}
dice_posterior <- function(x, dice) {
post <- NULL
for (i in 1:length(dice)) {
post <- c(post, dice_likelihood(x, dice[i]))
}
df <- data.frame(dice, post=post/sum(post))
return(df)
}
dice_posterior(6, dice)
dice_posterior(8, dice)
0.484+0.323+0.194
dice_density <- function(x, dice) {
if (x>dice)
p <- 0
else
p <- 1/dice
return(p)
}
dice_likelihood <- function(x, dice) {
l <- 1
for (i in 1:length(x)) {
l <- l*dice_density(x[i], dice)
}
return(l)
}
dice_posterior(c(6, 8, 7, 7, 5, 4), dice)
?any
dice_likelihood <- function(x, dice) {
if (any(x>dice))
l <- 0
else
l <- (1/dice)^x
return(l)
}
dice_posterior(c(6, 8, 7, 7, 5, 4), dice)
x<-c(6, 8, 7, 7, 5, 4)
dice
any(x>dice)
x>dice
check <- x>dice
check
any(check)
dice_likelihood <- function(x, dice) {
check <- x>dice
if (any(check))
l <- 0
else
l <- (1/dice)^x
return(l)
}
dice_posterior(c(6, 8, 7, 7, 5, 4), dice)
dice_likelihood <- function(x, dice) {
ll <- 1
for (i in 1:length(x)) {
if (x[1]>dice)
l <- 0
else
l <- 1/dice
ll <- ll*l
}
return(ll)
}
dice_likelihoodx, dice
dice_likelihood(x, dice)
x
dice
dice_likelihood <- function(x, dice) {
ll <- 1
for (i in 1:length(x)) {
if (x[i]>dice)
l <- 0
else
l <- 1/dice
ll <- ll*l
}
return(ll)
}
dice_posterior(c(6, 8, 7, 7, 5, 4), dice)
0.91585+0.08040+0.00375
0.943248453672+0.0552061280613+0.0015454182665
dice_posterior(c(6, 8, 7, 7, 5, 4), 8)
dice_likelihood(c(6, 8, 7, 7, 5, 4), 8)
dice_likelihood(c(6, 8, 7, 7, 5, 4), 12)
dice_likelihood(c(6, 8, 7, 7, 5, 4), 20)
3.81e-06+3.35e-07+1.56e-08
3.81e-06/4.16e-06
dice_posterior(c(6, 8, 7, 7, 5, 4), dice)
1/20+1/30+1/40+1/60+1/100
(1/20)/0.135
dice <- c(4, 6, 8, 12, 20)
dice_likelihood <- function(x, dice) {
if (x>dice)
l <- 0
else
l <- 1/dice
return(l)
}
prior <- 1/5
prob_D <- c(rep(5/50, 4), rep(4/50, 2), rep(3/50, 2),
rep(2/50, 4), rep(1/50, 8))
dice_posterior <- function(x, dice, prior, prob_D) {
post <- NULL
for (i in 1:length(dice)) {
post <- c(post, prior*dice_likelihood(x, dice[i])/prob_D[x])
}
df <- data.frame(dice, post)
return(df)
}
dice_posterior(6, dice, prior, prob_D)
x=6
dice
priot
prior
prob_D[x]
dice_posterior(4, dice, prior, prob_D)
0.500+0.333+0.250
0.417+0.312+0.208
0.417+0.312+0.208+0.125
sum(prob_D)
0.417+0.312+0.208+0.125
0.417/1.06
0.312/1.06
0.208/1.06
0.125/1.06
dice_posterior <- function(x, dice, prior, prob_D) {
post <- NULL
for (i in 1:length(dice)) {
post <- c(post, prior*dice_likelihood(x, dice[i])/prob_D[x])
}
df <- data.frame(dice, post=post/sum(post))
return(df)
}
dice_posterior(6, dice, prior, prob_D)
dice_posterior(4, dice, prior, prob_D)
0.3704+0.2469+0.1852+0.1235+0.0741
dice_posterior(8, dice, prior, prob_D)
dice_likelihood <- function(x, dice) {
ll <- 1
for (i in 1:length(x)) {
if (x[i]>dice)
l <- 0
else
l <- 1/dice
ll <- ll*l
}
return(ll)
}
dice_posterior(c(6, 8, 7, 7, 5, 4), dice)
dice_posterior(c(6, 8, 7, 7, 5, 4), prior, dice, prob_D)
x
x<- c(6, 8)
prod(prob_D[x])
dice_posterior <- function(x, dice, prior, prob_D) {
post <- NULL
pD <- prod(prob_D[x])
for (i in 1:length(dice)) {
post <- c(post, prior*dice_likelihood(x, dice[i])/pD)
}
df <- data.frame(dice, post=post/sum(post))
return(df)
}
dice_posterior(6, dice, prior, prob_D)
dice_likelihood <- function(x, dice) {
ll <- 1
for (i in 1:length(x)) {
if (x[i]>dice)
l <- 0
else
l <- 1/dice
ll <- ll*l
}
return(ll)
}
dice_posterior(c(6, 8, 7, 7, 5, 4), prior, dice, prob_D)
debug(dice_posterior)
dice_posterior(c(6, 8, 7, 7, 5, 4), prior, dice, prob_D)
pD
i
dice_likelihood(x, dice[i])
prior*dice_likelihood(x, dice[i])/pD
prior
undebug(dice_posterior)
prior <- 1/5
prior
dice_posterior(c(6, 8, 7, 7, 5, 4), prior, dice, prob_D)
debug(dice_posterior)
dice_posterior(c(6, 8, 7, 7, 5, 4), prior, dice, prob_D)
post
pD
i
dice_posterior(c(6, 8, 7, 7, 5, 4), prior, dice, prob_D)
prior
dice
undebug(dice_posterior)
dice_posterior(c(6, 8, 7, 7, 5, 4), dice, prior, prob_D)
loco <- 1:1000
df <- data.frame(loco, loco_likelihood(6, loco))
loco_likelihood <- function(x, loco){
if (x>loco)
l <- 0
else
l <- 1/loco
}
df <- data.frame(loco, loco_likelihood(6, loco))
l <- NULL
for (i in 1:length(loco))
l <- loco_likelihood(60, loco[i])
l <- NULL
for (i in 1:1000)
l <- loco_likelihood(60, i)
df <- data.frame(x=1:1000, l)
ggplot(df, aes(x, l)) + geom_line()
l <- NULL
for (i in 1:1000)
l <- c(l, loco_likelihood(60, i))
df <- data.frame(x=1:1000, l)
ggplot(df, aes(x, l)) + geom_line()
l <- NULL
for (i in 1:1000)
l <- c(l, loco_likelihood(60, i))
df <- data.frame(hyp=1:1000, l)
ggplot(df, aes(hyp, l)) + geom_line()
mean(l)
mean(df$l*df$hyp)
sum(df$l)
df <- data.frame(hyp=1:1000, l, post=l/sum(l))
ggplot(df, aes(hyp, post)) + geom_line()
mean(df$post*df$hyp)
df$post*df$hyp
sum(df$post*df$hyp)
df$post2 <- l*prior
df$post2 <- df$post2/sum(df$post2)
ggplot(df, aes(hyp, post)) + geom_line() + xlab("Number of trains") +
ylab("Probability") + geom_line(aes(y=post2), colour="blue")
prior <- (1/1:1000)^alpha
alpha=0.9
prior <- (1/1:1000)^alpha
prior
df$post2 <- df$post2/sum(df$post2)
df$post2 <- l*prior
df$post2 <- df$post2/sum(df$post2)
ggplot(df, aes(hyp, post)) + geom_line() + xlab("Number of trains") +
ylab("Probability") + geom_line(aes(y=post2), colour="blue")
alpha=0.9
prior <- (1/1:1000)^alpha
df <- data.frame(hyp=1:1000, l, unif=l/sum(l))
df$power <- l*prior
df$power <- df$power/sum(df$power)
df_m <- gather(prior, posterior, unif, power)
library(tidyverse)
library(gridExtra)
library(broom)
df_m <- gather(prior, posterior, unif, power)
?gather
df_m <- df %>% gather(prior, posterior, unif, power)
ggplot(df, aes(hyp, post)) + geom_line() + xlab("Number of trains") +
ylab("Probability") + geom_line(aes(y=post2), colour="blue")
ggplot(df, aes(x=hyp, y=posterior, colr=prior)) + geom_line() + xlab("Number of trains") +
ylab("Probability") +
scale_color_brewer(palette="Dark2")
ggplot(df_m, aes(x=hyp, y=posterior, colr=prior)) + geom_line() + xlab("Number of trains") +
ylab("Probability") +
scale_color_brewer(palette="Dark2")
ggplot(df_m, aes(x=hyp, y=posterior, color=prior)) + geom_line() + xlab("Number of trains") +
ylab("Probability") +
scale_color_brewer(palette="Dark2")
sum(df$power*df$hyp)
round(sum(df$power[1:10]*df$hyp[1:10]), 0)
?cumsum
probs <- cumsum(df$power)
probs
?which
which(probs > 0.1)
which(probs > 0.1)[1]
df$hyp[66]
sum(df$power[1:66]*df$hyp[1:66])
head(df)
df[61:70,]
which(probs > 0.1)[1]
which(probs > 0.95)[1]
which(probs > 0.05)[1]
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 6,
fig.width = 9,
fig.align='center'
)
options(digits=3)
library(tidyverse)
library(gridExtra)
library(broom)
dice <- c(4, 6, 8, 12, 20)
dice_likelihood <- function(x, dice) {
if (x>dice)
l <- 0
else
l <- 1/dice
return(l)
}
prior <- 1/5
prob_D <- c(rep(5/50, 4), rep(4/50, 2), rep(3/50, 2),
rep(2/50, 4), rep(1/50, 8))
dice_posterior <- function(x, dice, prior, prob_D) {
post <- NULL
pD <- prod(prob_D[x])
for (i in 1:length(dice)) {
post <- c(post, prior*dice_likelihood(x, dice[i])/pD)
}
df <- data.frame(dice, post=post/sum(post))
return(df)
}
dice_posterior(6, dice, prior, prob_D)
dice_posterior(4, dice, prior, prob_D)
dice_posterior(1, dice, prior, prob_D)
dice_posterior(7, dice, prior, prob_D)
dice_posterior(8, dice, prior, prob_D)
sample(seq(-10, 30, 1), 6)
devtools::install_github("jennybc/githug")
library(githug)
help(package="githug")
pal<-function(mat) rgb(mat[,1],mat[,2],mat[,3],maxColorValue=255)
showpal<-function(pal) {
n<-length(pal)
image(1:n, 1, as.matrix(1:n), col = pal,
xlab = deparse(substitute(pal)), ylab = "", xaxt = "n", yaxt = "n",
bty = "n")
}
rocker<-pal(rbind(c(110,3,40), c(53,111,44), c(250,100,0), c(44,32,30), c(2,6,186), c(54,30,54), c(200,71,78)))
black_plain<-pal(rbind(c(0,82,50), c(40,30,30), c(164,38,94), c(253,190,0), c(255,240,0), c(160,0,17)))
flood_tide <- pal(rbind(c(45,56,86), c(77,101,186), c(236,229,221), c(250,208,169), c(253,236,130)))
last_rays<-pal(rbind(c(60,60,60),c(120,150,180),c(230,230,220),c(250,170,114), c(190,92,85)))
red_sky_golden_cloud<-pal(rbind(c(0,40,25), c(68,111,4), c(0,91,205), c(242,200,210), c(255,150,0), c(255,43,0), c(77,50,150)))
winged_spill<-pal(rbind(c(90,60,75),c(232,112,75),c(115,100,133),c(253,238,98),c(98,133,138), c(188,68,82)))
pink_cloud<-pal(rbind(c(27,27,27),c(130,110,96),c(240,164,0),c(220,220,220),c(179,77,103)))
winter_light<-pal(rbind(c(218,212,60),c(242,238,195), c(146,38,31), c(68,33,86)))
winter_light
pink_cloud
library(tidyverse)
df <- data.frame(x1=c(rnorm(100), rnorm(100, 3)), x2=c(rnorm(100, -3), rnorm(100, 3)), x3 = c(rnorm(100, 3), rnorm(100)), group=c(rep("A", 100), "B", 100))
df <- data.frame(x1=c(rnorm(100), rnorm(100, 3)), x2=c(rnorm(100, -3), rnorm(100, 3)))
df <- data.frame(x1=c(rnorm(100), rnorm(100, 3)), x2=c(rnorm(100, -3), rnorm(100, 3)), x3 = c(rnorm(100, 3), rnorm(100)), )
df <- data.frame(x1=c(rnorm(100), rnorm(100, 3)),
x2=c(rnorm(100, -3), rnorm(100, 3)),
x3 = c(rnorm(100, 3), rnorm(100)),
group=c(rep("A", 100), rep("B", 100)))
length(rocker)
winter_light
ggplot(df, aes(x=x1, y=x2, colour=group)) + geom_point() +
scale_colour_manual(values=winter_light[1:2])
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.align='center',
fig.height = 4,
fig.width = 4,
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(gridExtra)
grad <- read_csv("../data/graduate-programs.csv")
head(grad[1:4,c(2,3,4,6)])
melbtemp <- read.fwf("../data/ASN00086282.dly",
c(11, 4, 2, 4, rep(c(5, 1, 1, 1), 31)), fill=T)
head(melbtemp[1:4,c(1,2,3,4,seq(5,128,4))])
tb <- read_csv("../data/tb.csv")
#tail(tb)
colnames(tb)
pew <- read.delim(
file = "http://stat405.had.co.nz/data/pew.txt",
header = TRUE,
stringsAsFactors = FALSE,
check.names = F
)
pew[1:5, 1:5]
data(french_fries, package = "reshape2")
kable(head(french_fries, 4), format = "html", row.names = F)
library(reshape2)
library(tidyr)
head(french_fries)
library(ggplot2)
french_sub <- french_fries %>% filter(time == 10)
ggplot(data = french_sub) +
geom_boxplot(aes(x="1_potato", y=potato), fill = I("red")) +
geom_boxplot(aes(x = "2_buttery", y = buttery), fill = I("orange")) +
geom_boxplot(aes(x = "3_grassy", y = grassy), fill = I("yellow")) +
geom_boxplot(aes(x = "4_rancid", y = rancid), fill = I("green")) +
geom_boxplot(aes(x = "5_painty", y = painty), fill = I("blue")) +
xlab("variable") + ylab("rating")
ff_long <- gather(french_fries, key = variable,
value = rating, potato:painty)
head(ff_long)
ff_long_sub <- ff_long %>% filter(time == 10)
ggplot(data = ff_long_sub,
aes(x=variable, y=rating,  fill = variable)) +
geom_boxplot()
head(ff_long)
ff_wide <- spread(ff_long,
key = variable, value = rating)
head(ff_wide)
library(dplyr)
ff_summary <- ff_long %>% group_by(variable) %>% # SPLIT
summarise(
m = mean(rating, na.rm = TRUE),
s=sd(rating, na.rm=TRUE)) # APPLY + COMBINE
ff_summary
student2012.sub <- readRDS("../data/student_sub.rds")
student2012.sub %>%
count(CNT)
french_fries %>%
filter(subject == 3, time == 1)
french_fries %>%
arrange(desc(rancid)) %>%
head
french_fries %>%
select(time, treatment, subject, rep, potato) %>%
head
french_fries %>%
mutate(yucky = grassy+rancid+painty) %>%
head
french_fries %>%
group_by(time, treatment) %>%
summarise(mean_rancid = mean(rancid),
sd_rancid = sd(rancid))
library(lubridate)
now()
now(tz = "America/Chicago")
today()
now() + hours(4)
today() - days(2)
ymd("2013-05-14")
mdy("05/14/2013")
dmy("14052013")
oscars <- read_csv("../data/oscars.csv")
oscars <- oscars %>% mutate(DOB = mdy(DOB))
head(oscars$DOB)
summary(oscars$DOB)
oscars <- oscars %>% mutate(year=year(DOB))
summary(oscars$year)
oscars %>% filter(year == "2029") %>%
select(Name, Sex, DOB)
oscars <- oscars %>% mutate(month=month(DOB, label = TRUE, abbr = TRUE))
table(oscars$month)
ggplot(data=oscars, aes(month)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
df <- data.frame(m=sample(1:12, 423, replace=TRUE))
df$m2 <- factor(df$m, levels=1:12,
labels=month.abb)
ggplot(data=df, aes(x=m2)) + geom_bar()
