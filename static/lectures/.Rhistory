opp <- sample(c("Rock", "Paper", "Scissors"))
you <- sample(c("Rock", "Paper", "Scissors"))
play <- function(opp, you) {
result <- 0
if (opp == "Rock") {
if (you == "Paper") {
result <- 1
}
else if (you == "Scissors") {
result <- -1
}
else if (opp == "Paper") {
if (you == "Rock") {
result <- -1
}
else if (you == "Scissors") {
result <- 1
}
else if (opp == "Scissors") {
if (you == "Rock") {
result <- 1
}
else if (you == "Paper") {
result <- -1
}
return(result)
}
strategy1 <- function(opp, you) {
result <- play(opp, you)
if (result == 1 | result == -1) {
if (you == "Rock") {
opp_new <- "Paper"
you_new <- "Scissors"
}
else if (you == "Paper") {
opp_new <- "Scissors"
you_new <- "Rock"
}
else if (you == "Scissors") {
opp_new <- "Rock"
you_new <- "Paper"
}
else if (result == 0) {
opp_new <- sample(c("Rock", "Paper", "Scissors"))
you_new <- sample(c("Rock", "Paper", "Scissors"))
}
return(list(opp_new, you_new))
}
play(opp, you)
opp
set.seed(23)
opp <- sample(c("Rock", "Paper", "Scissors"), 1)
you <- sample(c("Rock", "Paper", "Scissors"), 1)
play <- function(opp, you) {
result <- 0
if (opp == "Rock") {
if (you == "Paper") {
result <- 1
}
else if (you == "Scissors") {
result <- -1
}
else if (opp == "Paper") {
if (you == "Rock") {
result <- -1
}
else if (you == "Scissors") {
result <- 1
}
else if (opp == "Scissors") {
if (you == "Rock") {
result <- 1
}
else if (you == "Paper") {
result <- -1
}
return(result)
}
strategy1 <- function(opp, you) {
result <- play(opp, you)
if (result == 1 | result == -1) {
if (you == "Rock") {
opp_new <- "Paper"
you_new <- "Scissors"
}
else if (you == "Paper") {
opp_new <- "Scissors"
you_new <- "Rock"
}
else if (you == "Scissors") {
opp_new <- "Rock"
you_new <- "Paper"
}
else if (result == 0) {
opp_new <- sample(c("Rock", "Paper", "Scissors"), 1)
you_new <- sample(c("Rock", "Paper", "Scissors"), 1)
}
return(list(opp_new, you_new))
}
opp
you
play(opp, you)
strategy1(opp, you, -1)
strategy1(opp, you)
new <- strategy1(opp, you)
opp <- new$opp_new
you <- new$you_new
opp
you
new
opp <- new[[1]]
opp
you <- new[[2]]
you
strategy1(opp, you)
new <- strategy1(opp, you)
new
result(new[[1]], new[[2]])
play(new[[1]], new[[2]])
keep <- NULL
for (i in 1:100) {
new <- strategy1(opp, you)
opp <- new[[1]]
you <- new[[2]]
keep <- c(keep, play(opp, you))
}
keep
opp
new
you
keep <- NULL
for (i in 1:100) {
new <- strategy1(opp, you)
opp <- new[[1]]
you <- new[[2]]
cat(opp, you, "\n")
keep <- c(keep, play(opp, you))
}
opp <- "Rock"
you <- "Rock"
keep <- NULL
for (i in 1:100) {
new <- strategy1(opp, you)
opp <- new[[1]]
you <- new[[2]]
cat(opp, you, "\n")
keep <- c(keep, play(opp, you))
}
keep
opp <- "Rock"
you <- "Rock"
new <- strategy2(opp, you)
strategy2 <- function(opp, you) {
result <- play(opp, you)
if (result == 1 | result == -1) {
if (you == "Rock") {
opp_new <- "Paper"
you_new <- sample(c("Rock", "Paper", "Scissors"), 1)
}
else if (you == "Paper") {
opp_new <- "Scissors"
you_new <- sample(c("Rock", "Paper", "Scissors"), 1)
}
else if (you == "Scissors") {
opp_new <- "Rock"
you_new <- sample(c("Rock", "Paper", "Scissors"), 1)
}
else if (result == 0) {
opp_new <- sample(c("Rock", "Paper", "Scissors"), 1)
you_new <- sample(c("Rock", "Paper", "Scissors"), 1)
}
return(list(opp_new, you_new))
}
new <- strategy2(opp, you)
new
opp <- new[[1]]
you <- new[[2]]
cat(opp, you, "\n")
s2 <- c(s2, play(opp, you))
s2 <- NULL
opp <- "Rock"
you <- "Rock"
s2 <- NULL
for (i in 1:100) {
new <- strategy2(opp, you)
opp <- new[[1]]
you <- new[[2]]
cat(opp, you, "\n")
s2 <- c(s2, play(opp, you))
}
s2
opp <- "Rock"
you <- "Rock"
s1 <- NULL
for (i in 1:100) {
new <- strategy1(opp, you)
opp <- new[[1]]
#you <- new[[2]]
cat(opp, you, "\n")
s1 <- c(s1, play(opp, you))
}
opp <- "Rock"
you <- "Rock"
s2 <- NULL
for (i in 1:100) {
new <- strategy2(opp, you)
opp <- new[[1]]
you <- new[[2]]
#cat(opp, you, "\n")
s2 <- c(s2, play(opp, you))
}
s1
s2
opp <- "Rock"
you <- "Rock"
s1 <- NULL
for (i in 1:100) {
new <- strategy1(opp, you)
opp <- new[[1]]
#you <- new[[2]]
cat(opp, you, "\n")
s1 <- c(s1, play(opp, you))
}
strategy1 <- function(opp, you) {
result <- play(opp, you)
if (result == 1) {
if (you == "Rock") {
opp_new <- "Paper"
you_new <- "Scissors"
}
else if (you == "Paper") {
opp_new <- "Scissors"
you_new <- "Rock"
}
else if (you == "Scissors") {
opp_new <- "Rock"
you_new <- "Paper"
}
else if (result == -1) {
if (you == "Rock") {
opp_new <- "Paper"
you_new <- "Scissors"
}
else if (you == "Paper") {
opp_new <- "Scissors"
you_new <- "Rock"
}
else if (you == "Scissors") {
opp_new <- "Rock"
you_new <- "Paper"
}
else if (result == 0) {
opp_new <- sample(c("Rock", "Paper", "Scissors"), 1)
you_new <- sample(c("Rock", "Paper", "Scissors"), 1)
}
return(list(opp_new, you_new))
}
opp <- "Rock"
you <- "Rock"
s1 <- NULL
for (i in 1:100) {
new <- strategy1(opp, you)
opp <- new[[1]]
#you <- new[[2]]
cat(opp, you, "\n")
s1 <- c(s1, play(opp, you))
}
opp <- "Rock"
you <- "Rock"
new <- strategy1(opp, you)
new
opp <- "Rock"
you <- "Rock"
s1 <- NULL
for (i in 1:100) {
new <- strategy1(opp, you)
opp <- new[[1]]
you <- new[[2]]
cat(opp, you, "\n")
s1 <- c(s1, play(opp, you))
}
s1
strategy1 <- function(opp, you) {
result <- play(opp, you)
if (result == 1 | result == -1) {
if (you == "Rock") {
opp_new <- "Paper"
you_new <- "Scissors"
}
else if (you == "Paper") {
opp_new <- "Scissors"
you_new <- "Rock"
}
else if (you == "Scissors") {
opp_new <- "Rock"
you_new <- "Paper"
}
else if (result == 0) {
opp_new <- sample(c("Rock", "Paper", "Scissors"), 1)
you_new <- sample(c("Rock", "Paper", "Scissors"), 1)
}
return(list(opp_new, you_new))
}
opp <- "Rock"
you <- "Rock"
s1 <- NULL
for (i in 1:100) {
new <- strategy1(opp, you)
opp <- new[[1]]
you <- new[[2]]
cat(opp, you, "\n")
s1 <- c(s1, play(opp, you))
}
s1
opp <- "Rock"
you <- "Rock"
s2 <- NULL
for (i in 1:100) {
new <- strategy2(opp, you)
opp <- new[[1]]
you <- new[[2]]
#cat(opp, you, "\n")
s2 <- c(s2, play(opp, you))
}
s1
s2
library(knitr)
opts_chunk$set(
message = FALSE,
cache = FALSE,
echo = FALSE,
fig.height = 5,
fig.width = 8,
fig.align = "center",
collapse = TRUE,
comment = "#>"
)
options(digits=2)
library(tidyverse)
library(gridExtra)
loss <- function(p) {
l1 <- 8*p - 5*(1-p)
l2 <- 2*p + 6*(1-p)
df <- data.frame(p, l1, l2)
return(df)
}
p <- seq(0, 1, 0.05)
l <- loss(p) %>%
gather(loss, amount, l1:l2)
l
ggplot(l, aes(x=p, y=amount, colour=loss)) + geom_line()
loss(p)
p <- seq(0, 1, 0.01)
l <- loss(p) %>%
gather(loss, amount, l1:l2)
ggplot(l, aes(x=p, y=amount, colour=loss)) +
geom_line() + scale_colour_brewer(palette="Dark2")
loss(p)
l2 <- loss(p)
View(l2)
loss(0.65)
loss(0.655)
options(digits=3)
loss(0.655)
loss(0.645)
loss(0.6458)
loss(0.6457)
loss(0.6459)
loss(0.65)
library(knitr)
opts_chunk$set(
message = FALSE,
cache = FALSE,
fig.height = 2,
fig.width = 5,
collapse = TRUE,
comment = "#>"
)
options(digits=2)
library(dplyr)
library(tidyr)
library(eechidna)
library(dplyr)
library(ggplot2)
aec2013 <- aec2013_2cp_electorate %>%
filter(Elected == "Y")
aec_abs <- merge(aec2013, abs2011, by = "Electorate")
aec_abs$PartyGp <- aec_abs$PartyAb
aec_abs$PartyGp[aec_abs$PartyGp %in% c("LP","LNP","NP","CLP")] <- "Coalition"
aec_abs$PartyGp[aec_abs$PartyGp %in% c("IND","PUP","KAP","GRN")] <- "Other"
ggplot(data=aec_abs, aes(x=Population)) + geom_dotplot(binwidth=2900) +
facet_wrap(~PartyGp, ncol = 3) + ylab("") + xlab("Population ('000)") +
scale_x_continuous(breaks=seq(75000, 225000, 25000), labels=seq(75, 225, 25))
aec_abs_means <- aec_abs %>% filter(PartyGp != "Other") %>%
group_by(PartyGp) %>%
summarise(m = mean(Population, na.rm=T), s = sd(Population, na.rm=T))
aec_abs_means
library(purrr)
mad <- function(df, shuffle=TRUE) {
if (shuffle)
df$PartyGp <- sample(df$PartyGp)
df_means <- df %>% group_by(PartyGp) %>%
summarise(m = mean(Population, na.rm=T))
return(d = abs(df_means$m[1] - df_means$m[2]))
}
aec_abs_sub <- aec_abs %>% filter(PartyGp != "Other")
aec_abs_meandif <- mad(aec_abs_sub, shuffle=FALSE)
aec_abs_shuffle <-1:1000 %>% map_dbl(~ mad(aec_abs_sub))
aec_abs_shuffle <- data.frame(d=aec_abs_shuffle, y=1:1000)
ggplot(data=aec_abs_shuffle, aes(x=d)) + geom_dotplot(binwidth=100) +
geom_vline(xintercept=aec_abs_meandif, colour="red")
library(knitr)
opts_chunk$set(
message = FALSE,
cache = FALSE,
echo = FALSE,
fig.height = 5,
fig.width = 8,
fig.align = "center",
collapse = TRUE,
comment = "#>"
)
options(digits=2)
library(tidyverse)
library(gridExtra)
set.seed(106)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
d <- sample(c("Rock", "Paper", "Scissors"), 10000, replace=TRUE)
table(d)
set.seed(1)
play <- function() {
my_money <- 1
i <- 0
while(my_money<2&&my_money>-1) {
i <- i+1
#cat(i, " ", my_money, "\n")
d <- runif(1)
#cat(i, ",", my_money, ",", d, "\n")
if (d<0.354)
my_money <- my_money+1
else if (d>=0.654)
my_money <-  my_money-1
}
return(list(nturns=i, winnings=my_money))
}
play()
devtools::install_github("earowang/sugrrants")
library(genderizer)
install.packages("genderizer")
install.packages("genderizeR")
library(genderizeR)
help(package="genderizeR")
genderize("Beat")
x<-"Beat Kleiner"
g <- findGivenNames(x)
g
x <- "Jih-Jie Chang"
g <- findGivenNames(x)
g
