3.6^2
oly_gdp_2016_12_08_models_coef <-
left_join(oly_gdp_2016_12_08_models_coef, label, by="model")
ggplot(data = oly_gdp_2016_12_08_models_coef, aes(x=variable, y=std)) +
geom_point() + geom_line(aes(group=label)) +
ylab("Standardized Estimates") + xlab("Variable")
ggplot(data = oly_gdp_2016_12_08_models_coef, aes(x=variable, y=std)) +
geom_point() + geom_line(aes(group=label, colour=model)) +
ylab("Standardized Estimates") + xlab("Variable") +
theme(legend.position="none")
ggplot(data = oly_gdp_2016_12_08_models_coef,
aes(x=variable, y=std, colour=model)) +
geom_point() + geom_line(aes(group=label)) +
ylab("Standardized Estimates") + xlab("Variable") +
theme(legend.position="none")
p <- ggplot(data = oly_gdp_2016_12_08_models_coef,
aes(x=variable, y=std, colour=model)) +
geom_point() + geom_line(aes(group=label)) +
ylab("Standardized Estimates") + xlab("Variable") +
theme(legend.position="none")
ggplotly(p)
m_A <- lm(M2016~M2012, data=oly_gdp_2016_12_08)
summary(m_A)
m_B <- lm(M2016~M2012+Population_mil, data=oly_gdp_2016_12_08)
summary(m_B)
anova(m_A, m_B)
m_B_diag <- augment(m_B)
p1 <- ggplot(m_B_diag, aes(x=.fitted, y=M2016)) + geom_point()
p2 <- ggplot(m_B_diag, aes(y=.resid, x=.fitted)) + geom_point()
grid.arrange(p1, p2, ncol=2)
m_B_diag <- augment(m_B)
p1 <- ggplot(m_B_diag, aes(x=.hat)) + geom_histogram()
p2 <- ggplot(m_B_diag, aes(x=.cooksd)) + geom_histogram()
grid.arrange(p1, p2, ncol=2)
p <- ggplot(m_B_diag, aes(x=.fitted, y=.cooksd, label=.rownames)) +
geom_point() + xlim(c(0,2.5)) + ylim(c(0, 0.12))
ggplotly(p)
m_B_diag
m_B_diag$Country <- oly_gdp_2016_12_08$Country
p <- ggplot(m_B_diag, aes(x=.fitted, y=.cooksd, label=Country)) +
geom_point() + xlim(c(0,2.5)) + ylim(c(0, 0.12))
ggplotly(p)
View(oly_gdp_2016_12_08)
rownames(oly_gdp_2016_12_08) <- oly_gdp_2016_12_08$Country
m_B <- lm(M2016~M2012+Population_mil, data=oly_gdp_2016_12_08)
summary(m_B)
m_B_diag <- augment(m_B)
View(m_B_diag)
p <- ggplot(m_B_diag, aes(x=.fitted, y=.cooksd, label=.rownames)) +
geom_point() + xlim(c(0,2.5)) + ylim(c(0, 0.12))
ggplotly(p)
p <- ggplot(m_B_diag, aes(x=.fitted, y=.cooksd, label=.rownames)) +
geom_point() + xlim(c(0,2.5)) + ylim(c(0, 0.5))
ggplotly(p)
library(car)
vif(m_B)
ggplot(m_B_diag, aes(x=M2012, y=Population_mil)) + geom_point()
m_B_coef <- coefficients(m_B)
m_B_coef
10^(1.56)
10^(1.56)-1
m_B_coef[1]+m_B_coef[2]*1.56+m_B_coef[3]*1.358
10^(1.5)-1
10^(1.48)-1
10^(1.358)
p1 <- ggplot(m_B_diag, aes(x=.fitted, y=M2016, label=.rownames)) + geom_point()
ggplotly(p1)
unlink('week5.class2_cache', recursive = TRUE)
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
error = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 6,
fig.width = 10,
fig.align = 'center',
collapse = TRUE,
comment = "#>"
)
options(digits=2)
library(tidyverse)
library(gridExtra)
library(GGally)
library(broom)
library(stringr)
olympics2012 <- read_csv("../data/olympics2012.csv")
oly_gdp2016 <- read_csv("../data/gdp2016.csv")
oly_gdp_2016_2012 <- full_join(oly_gdp2016[,c(1,5,6,7)],
olympics2012[,c("Country","Total")],
by="Country")
colnames(oly_gdp_2016_2012)[2] <- "M2016"
colnames(oly_gdp_2016_2012)[5] <- "M2012"
oly_gdp_2016_2012 <- oly_gdp_2016_2012 %>%
replace_na(list(M2016=0, M2012=0))
olympics2008 <- read_csv("../data/olympics2008.csv")
oly_gdp_2016_12_08 <- full_join(oly_gdp_2016_2012,
olympics2008[,c("Country","Total")],
by="Country")
colnames(oly_gdp_2016_12_08)[6] <- "M2008"
oly_gdp_2016_12_08 <- oly_gdp_2016_12_08 %>%
replace_na(list(M2008=0)) %>%
filter(!is.na(Population_mil))
p1 <- ggplot(oly_gdp_2016_12_08, aes(y=M2016, x=M2012)) + geom_point()
p2 <- ggplot(oly_gdp_2016_12_08, aes(y=M2016, x=M2008)) + geom_point()
p3 <- ggplot(oly_gdp_2016_12_08, aes(y=M2016, x=Population_mil)) + geom_point()
p4 <- ggplot(oly_gdp_2016_12_08, aes(y=M2016, x=GDP_PPP_bil)) + geom_point()
grid.arrange(p1, p2, p3, p4, ncol=2)
oly_gdp_2016_12_08 <- oly_gdp_2016_12_08 %>%
mutate(M2016=log10(M2016+1),
M2012=log10(M2012+1),
M2008=log10(M2008+1),
Population_mil=log10(Population_mil),
GDP_PPP_bil=log10(GDP_PPP_bil))
p1 <- ggplot(oly_gdp_2016_12_08, aes(y=M2016, x=M2012)) + geom_point()
p2 <- ggplot(oly_gdp_2016_12_08, aes(y=M2016, x=M2008)) + geom_point()
p3 <- ggplot(oly_gdp_2016_12_08, aes(y=M2016, x=Population_mil)) + geom_point()
p4 <- ggplot(oly_gdp_2016_12_08, aes(y=M2016, x=GDP_PPP_bil)) + geom_point()
grid.arrange(p1, p2, p3, p4, ncol=2)
library(meifly)
oly_gdp_2016_12_08_models <- fitall(oly_gdp_2016_12_08$M2016,
oly_gdp_2016_12_08[,3:6], "lm")
summary(oly_gdp_2016_12_08_models[[1]])
summary(oly_gdp_2016_12_08_models[[2]])
oly_gdp_2016_12_08_models_smry <- oly_gdp_2016_12_08_models %>%
map_df(glance) %>%
mutate(model = 1:15) %>%
mutate(negBIC = -1*BIC, negAIC = -1*AIC)
label <- NULL
for (i in 1:15) {
l <- as.character(summary(oly_gdp_2016_12_08_models[[i]])$call)[2]
label <- c(label,
substr(l, 5, str_length(l)))
}
oly_gdp_2016_12_08_models_smry <-
bind_cols(oly_gdp_2016_12_08_models_smry, as.data.frame(label))
oly_gdp_2016_12_08_models_smry_long <- oly_gdp_2016_12_08_models_smry %>%
gather(fit_stat, val, r.squared, adj.r.squared, logLik, negAIC,
negBIC) %>%
group_by(fit_stat, df) %>%
mutate(rank = min_rank(desc(val)))
ggplot(oly_gdp_2016_12_08_models_smry_long, aes(df, val)) +
geom_point() +
geom_line(data=filter(oly_gdp_2016_12_08_models_smry_long, rank == 1)) +
facet_wrap(~fit_stat, ncol = 5, scales = "free_y") +
xlab("Degrees of Freedom") +
ylab("Values")
library(plotly)
p1 <- ggplot(oly_gdp_2016_12_08_models_smry,
aes(df, adj.r.squared, label=label)) +
geom_point() +
ylim(c(0,1)) + xlim(c(1,6)) +
xlab("Degrees of Freedom") +
ylab("Adj R2")
ggplotly(p1)
oly_gdp_2016_12_08_models_coef <- coefficients(oly_gdp_2016_12_08_models)
label <- data.frame(label, model=factor(1:15))
oly_gdp_2016_12_08_models_coef <-
left_join(oly_gdp_2016_12_08_models_coef, label, by="model")
ggplot(data = oly_gdp_2016_12_08_models_coef,
aes(x=variable, y=std, colour=model)) +
geom_point() + geom_line(aes(group=label)) +
ylab("Standardized Estimates") + xlab("Variable") +
theme(legend.position="none")
p <- ggplot(data = oly_gdp_2016_12_08_models_coef,
aes(x=variable, y=std, colour=model)) +
geom_point() + geom_line(aes(group=label)) +
ylab("Standardized Estimates") + xlab("Variable") +
theme(legend.position="none")
ggplotly(p)
m_B_diag <- augment(m_B)
rownames(oly_gdp_2016_12_08) <- oly_gdp_2016_12_08$Country
m_B <- lm(M2016~M2012+Population_mil, data=oly_gdp_2016_12_08)
summary(m_B)
m_B_diag <- augment(m_B)
p1 <- ggplot(m_B_diag, aes(x=.fitted, y=M2016)) + geom_point()
p2 <- ggplot(m_B_diag, aes(y=.resid, x=.fitted)) + geom_point()
grid.arrange(p1, p2, ncol=2)
m_B_diag <- augment(m_B)
p1 <- ggplot(m_B_diag, aes(x=.hat)) + geom_histogram()
p2 <- ggplot(m_B_diag, aes(x=.cooksd)) + geom_histogram()
grid.arrange(p1, p2, ncol=2)
p <- ggplot(m_B_diag, aes(x=.fitted, y=.cooksd, label=.rownames)) +
geom_point() + xlim(c(0,2.5)) + ylim(c(0, 0.5))
ggplotly(p)
View(oly_gdp_2016_12_08)
10^(1.56)-1
10^(1.358)
10^(1.45)-1
10^(1.48)-1
p1 <- ggplot(m_B_diag, aes(x=.fitted, y=M2016, label=.rownames)) +
geom_point() + xlim(c(0,2)) + ylim(c(0.3, 2.2))
ggplotly(p1)
10^(1.56)-1
library(eechidna)
help(package=eechidna)
launchApp(
age = c("Age20_24", "Age25_34", "Age55_64"),
religion = c("Christianity", "Catholic", "NoReligion"),
other = c("Population", "MedianIncome", "Unemployed")
)
abs2011 %>% count(State)
glimpse(abs2011)
install.packages("Census2016")
library("Census2016")
help(package="Census2016")
glimpse(Census2016_religions)
Census2016_religions %>% count(year)
?abs2011
?geom_point
library(ggplot2)
?geom_point
?scale_x_continuous
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.align='center',
fig.height = 4,
fig.width = 4,
collapse = TRUE,
comment = "#>"
)
options(digits=4)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(gridExtra)
florida <- read_csv("../data/florida.csv")
ggplot(florida, aes(x=`age 65 (%)`, y=Log_Buchanan, label=County)) + geom_point() + scale_x_continuous(expand=0.1) + scale_y_continuous(expand=0.1)
ggplot(florida, aes(x=`age 65 (%)`, y=Log_Buchanan, label=County)) + geom_point() + scale_x_continuous(expand=c(0.1, 0.1)) + scale_y_continuous(expand=c(0.1, 0.1))
unlink('week6.class1_cache', recursive = TRUE)
?list.files
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 2,
fig.width = 5,
collapse = TRUE,
comment = "#>"
)
options(digits=2)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(gridExtra)
library(broom)
oly_gdp2012 <- read.csv("../data/olympics_gdp_all.csv")
oly_gdp2012 <- oly_gdp2012 %>%
mutate(GDP_log=log10(GDP))
ggplot(oly_gdp2012, aes(x=GDP_log, y=M2012)) + geom_point()
oly_glm <- glm(M2012~GDP_log, data=oly_gdp2012,
family=poisson(link=log))
summary(oly_glm)
oly_augment <- augment(oly_glm) %>%
mutate(.fitted_exp = exp(.fitted)) %>%
arrange(GDP_log)
View(oly_augment)
p1 <- ggplot(oly_augment, aes(x=GDP_log, y=.resid)) +
geom_point() + ylab("Residuals") +
theme(aspect.ratio=1)
p2 <- ggplot(oly_augment, aes(x=.resid)) +
geom_histogram() + xlab("Residuals")
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(oly_augment, aes(x=GDP_log, y=.resid)) +
geom_point() + ylab("Residuals") +
theme(aspect.ratio=1)
p2 <- ggplot(oly_augment, aes(x=.resid)) +
geom_histogram(binwidth=1) + xlab("Residuals")
grid.arrange(p1, p2, ncol=2)
View(oly_gdp2012)
oly_gdp2012 <- read.csv("../data/olympics_gdp_all.csv")
oly_gdp2012 <- oly_gdp2012 %>%
mutate(GDP_log=log10(GDP))
rownames(oly_gdp2012) <- oly_gdp2012$Country
oly_glm <- glm(M2012~GDP_log, data=oly_gdp2012,
family=poisson(link=log))
summary(oly_glm)$coefficients
oly_augment <- augment(oly_glm) %>%
mutate(.fitted_exp = exp(.fitted)) %>%
arrange(GDP_log)
oly_augment %>% arrange(.cooksd) %>%
select(.cooksd)
oly_augment %>% arrange(.cooksd) %>%
select(.cooksd, .resid)
oly_augment <- augment(oly_glm)
rownames(oly_augment) <- oly_gdp2012$Country
oly_augment <-  oly_augment %>%
mutate(.fitted_exp = exp(.fitted)) %>%
arrange(GDP_log)
oly_augment %>% arrange(.cooksd) %>%
select(.cooksd, .resid)
oly_augment %>% arrange(.cooksd) %>%
select(.rownames, .cooksd, .resid)
?augment
oly_augment <- augment(oly_glm, data=TRUE)
oly_glm
residuals(oly_glm)
aus <- oly_gdp2012 %>% filter(Code == "AUS")
predict(oly_glm, aus)
?predict.glm
predict(oly_glm, aus, type="response")
oly_augment %>% arrange(desc(.cooksd)) %>%
select(.rownames, .cooksd, .resid)
ggplot(tennis_augment, aes(x=.resid)) +
geom_histogram()
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 2,
fig.width = 5,
collapse = TRUE,
comment = "#>"
)
options(digits=2)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(gridExtra)
library(broom)
oly_gdp2012 <- read.csv("../data/olympics_gdp_all.csv")
oly_gdp2012 <- oly_gdp2012 %>%
mutate(GDP_log=log10(GDP))
rownames(oly_gdp2012) <- oly_gdp2012$Country
ggplot(oly_gdp2012, aes(x=GDP_log, y=M2012)) + geom_point()
oly_glm <- glm(M2012~GDP_log, data=oly_gdp2012,
family=poisson(link=log))
summary(oly_glm)$coefficients
oly_augment <- augment(oly_glm)
rownames(oly_augment) <- oly_gdp2012$Country
oly_augment <-  oly_augment %>%
mutate(.fitted_exp = exp(.fitted)) %>%
arrange(GDP_log)
p1 <- ggplot(oly_gdp2012, aes(x=GDP_log, y=M2012)) +
geom_point() +
geom_line(data=oly_augment, aes(x=GDP_log, y=.fitted_exp),
colour="red")
p2 <- ggplot(oly_gdp2012, aes(x=GDP_log, y=log(M2012))) +
geom_point() +
geom_line(data=oly_augment, aes(x=GDP_log, y=.fitted),
colour="red")
grid.arrange(p1, p2, ncol=2)
summary(oly_glm)
p1 <- ggplot(oly_augment, aes(x=GDP_log, y=.resid)) +
geom_point() + ylab("Residuals") +
theme(aspect.ratio=1)
p2 <- ggplot(oly_augment, aes(x=.resid)) +
geom_histogram(binwidth=1) + xlab("Residuals")
grid.arrange(p1, p2, ncol=2)
oly_augment %>% arrange(desc(.cooksd)) %>%
select(.rownames, .cooksd, .resid)
aus <- oly_gdp2012 %>% filter(Code == "AUS")
predict(oly_glm, aus)
aus <- oly_gdp2012 %>% filter(Code == "AUS")
predict(oly_glm, aus, type="response")
tennis <- read_csv("../data/tennis_2012_wta.csv")
p1 <- ggplot(tennis, aes(x=Receiving.Points.Won, y=won)) + geom_point()
p2 <- ggplot(tennis, aes(x=Receiving.Points.Won, y=won)) + geom_jitter()
grid.arrange(p1, p2, ncol=2)
tennis_glm <- glm(won~Receiving.Points.Won, data=tennis,
family=binomial(link='logit'))
summary(tennis_glm)$coefficients
tennis_augment <- augment(tennis_glm) %>%
mutate(.fitted_ln=exp(.fitted)/(1+exp(.fitted))) %>%
arrange(Receiving.Points.Won)
ggplot(tennis, aes(x=Receiving.Points.Won, y=won)) + geom_point() +
geom_line(data=tennis_augment, aes(x=Receiving.Points.Won,
y=.fitted_ln), colour="red")
summary(tennis_glm)
ggplot(tennis_augment, aes(x=.resid)) +
geom_histogram()
tennis_augment %>% arrange(desc(.cooksd)) %>%
select(.cooksd, .resid)
newdata <- data.frame(Receiving.Points.Won=c(20, 50), won=c(NA, NA))
predict(tennis_glm, newdata)
predict(tennis_glm, newdata, type="response")
citation()
citation("plotly")
install.packages("nortest")
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 4,
fig.width = 4,
fig.align='center'
)
options(digits=3)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(gridExtra)
library(broom)
radon_lm_fit <- radon_sub; radon_lm_fit$fit <- fitted(radon_lm)
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 4,
fig.width = 4,
fig.align='center'
)
options(digits=3)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(gridExtra)
library(broom)
library(HLMdiag)
data(radon)
radon <- radon %>% rename(storey=basement)
glimpse(radon)
ggplot(radon, aes(x=uranium, y=log.radon)) + geom_point()
radon_keep <- radon %>% group_by(county) %>%
tally() %>% filter(n > 4)
radon_sub <- radon %>%
filter(county %in% radon_keep$county & log.radon > -2)
radon_sub$storey <-
factor(radon_sub$storey, levels=c(0,1),
labels=c("basement", "first floor"))
ggplot(radon_sub, aes(x=uranium, y=log.radon)) +
geom_point() +
geom_smooth(method="lm", se=F) +
facet_wrap(~storey)
radon_lm <- glm(log.radon ~ storey + uranium,
data = radon_sub)
summary(radon_lm)
radon_lm_fit <- radon_sub; radon_lm_fit$fit <- fitted(radon_lm)
ggplot(radon_lm_fit, aes(x=uranium, y=log.radon, colour=storey)) + geom_point() +
geom_line(aes(y=fit))
ggplot(radon_lm_fit, aes(x=uranium, y=log.radon, colour=storey)) + geom_point() +
geom_line(aes(y=fit)) + scale_colour_brewer(palette="Dark2")
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 6,
fig.width = 9,
fig.align='center'
)
options(digits=3)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(gridExtra)
library(broom)
coef <- coefficients(radon_lm)
coef
radon_lm <- glm(log.radon ~ storey*uranium, data = radon_sub)
coef
coef <- coefficients(radon_lm)
coef
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 6,
fig.width = 9,
fig.align='center'
)
options(digits=3)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(gridExtra)
library(broom)
library(HLMdiag)
data(radon)
radon <- radon %>% rename(storey=basement)
glimpse(radon)
ggplot(radon, aes(x=uranium, y=log.radon)) + geom_point()
radon_keep <- radon %>% group_by(county) %>%
tally() %>% filter(n > 4)
radon_sub <- radon %>%
filter(county %in% radon_keep$county & log.radon > -2)
radon_sub$storey <-
factor(radon_sub$storey, levels=c(0,1),
labels=c("basement", "first floor"))
ggplot(radon_sub, aes(x=uranium, y=log.radon)) +
geom_point() +
geom_smooth(method="lm", se=F) +
facet_wrap(~storey)
radon_lm <- glm(log.radon ~ storey + uranium,
data = radon_sub)
summary(radon_lm)
radon_lm_fit <- radon_sub; radon_lm_fit$fit <- fitted(radon_lm)
ggplot(radon_lm_fit, aes(x=uranium, y=log.radon, colour=storey)) + geom_point() +
geom_line(aes(y=fit)) + scale_colour_brewer(palette="Dark2")
