library(ggplot2)
library(readr)
library(gridExtra)
library(broom)
library(HLMdiag)
data(radon)
radon <- radon %>% rename(storey=basement)
glimpse(radon)
ggplot(radon, aes(x=uranium, y=log.radon)) + geom_point()
radon_keep <- radon %>% group_by(county) %>%
tally() %>% filter(n > 4)
radon_sub <- radon %>%
filter(county %in% radon_keep$county & log.radon > -2)
radon_sub$storey <-
factor(radon_sub$storey, levels=c(0,1),
labels=c("basement", "first floor"))
ggplot(radon_sub, aes(x=uranium, y=log.radon)) +
geom_point() +
geom_smooth(method="lm", se=F) +
facet_wrap(~storey)
radon_lm <- glm(log.radon ~ storey + uranium,
data = radon_sub)
summary(radon_lm)
radon_lm_fit <- radon_sub; radon_lm_fit$fit <- fitted(radon_lm)
ggplot(radon_lm_fit, aes(x=uranium, y=log.radon, colour=storey)) + geom_point() +
geom_line(aes(y=fit)) + scale_colour_brewer(palette="Dark2")
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 6,
fig.width = 9,
fig.align='center'
)
options(digits=3)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(gridExtra)
library(broom)
library(rpart)
library(tidyverse)
help(package="rpart")
x=sort(runif(100)-0.5)
df <- data.frame(x, y=c(x[1:50]^2, x[51:75]*2, -x[76:100]^2))
ggplot(df, aes(x=x, y=y)) + geom_point()
df <- data.frame(x, y=c(x[1:50]^2, x[51:75]*2, -x[76:100]^2)+rnorm(100)*0.1)
ggplot(df, aes(x=x, y=y)) + geom_point()
df.rp <- rpart(y~x, data=df)
df.rp
plot(df_rp)
df_rp <- rpart(y~x, data=df)
df_rp
plot(df_rp)
library(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
help(package="rpart.plot")
rpart.plot(df_rp)
data(ptitanic)
tree <- rpart(survived ~ ., data=ptitanic, cp=.02)
# cp=.02 because want small tree for demo
old.par <- par(mfrow=c(2,2))
# put 4 figures on one page
prp(tree, main="default prp\n(type = 0, extra = 0)")
ggplot(df, aes(x=x, y=y)) + geom_point() +
geom_vline(xintercept = 0.299)
ggplot(df, aes(x=x, y=y)) + geom_point() +
geom_vline(xintercept = 0.299)
ggplot(df, aes(x=x, y=y)) + geom_point() +
geom_vline(xintercept = 0.299) +
geom_vline(xintercept = 0.447)
ggplot(df, aes(x=x, y=y)) + geom_point() +
geom_vline(xintercept = 0.299) +
geom_vline(xintercept = 0.447) +
geom_vline(xintercept = 0.146)
ggplot(df, aes(x=x, y=y)) + geom_point() +
geom_vline(xintercept = 0.299, colour="hotpink") +
geom_vline(xintercept = 0.447, colour="hotpink") +
geom_vline(xintercept = 0.146, colour="hotpink") +
geom_vline(xintercept = -0.354, colour="hotpink")
ggplot(df, aes(x=x, y=y)) + geom_point() +
geom_vline(xintercept = 0.299, colour="hotpink") +
geom_vline(xintercept = 0.447, colour="hotpink") +
geom_vline(xintercept = 0.146, colour="hotpink") +
geom_vline(xintercept = -0.354, colour="hotpink") +
geom_vline(xintercept = 0.044, colour="hotpink")
ggplot(df, aes(x=x, y=y)) + geom_point() +
geom_vline(xintercept = 0.299, colour="hotpink") +
geom_vline(xintercept = 0.447, colour="hotpink") +
geom_vline(xintercept = 0.146, colour="hotpink") +
geom_vline(xintercept = -0.354, colour="hotpink") +
geom_vline(xintercept = 0.044, colour="hotpink") +
geom_vline(xintercept = -0.206, colour="hotpink")
?cut
df_fit <- df %>%
mutate(partitions = cut(x,
breaks=c(-0.354, -0.206, 0.044,
0.146, 0.299, 0.447))) %>%
group_by(partitions) %>%
mutate(x=mean(x), y=mean(y))
ggplot(df, aes(x=x, y=y)) + geom_point() +
geom_vline(xintercept = 0.299, colour="hotpink") +
geom_vline(xintercept = 0.447, colour="hotpink") +
geom_vline(xintercept = 0.146, colour="hotpink") +
geom_vline(xintercept = -0.354, colour="hotpink") +
geom_vline(xintercept = 0.044, colour="hotpink") +
geom_vline(xintercept = -0.206, colour="hotpink") +
geom_point(data=df_fit, aes(x=x, y=y),
colour="hotpink", size=3, alpha=0.5)
df_fit
df_fit <- df %>%
mutate(partitions = cut(x,
breaks=c(-Inf, -0.354, -0.206, 0.044,
0.146, 0.299, 0.447, -Inf))) %>%
group_by(partitions) %>%
mutate(x=mean(x), y=mean(y))
df_fit <- df %>%
mutate(partitions = cut(x,
breaks=c(-Inf, -0.354, -0.206, 0.044,
0.146, 0.299, 0.447, Inf))) %>%
group_by(partitions) %>%
mutate(x=mean(x), y=mean(y))
df_fit
df_fit <- df %>%
mutate(partitions = cut(x,
breaks=c(-Inf, -0.354, -0.206, 0.044,
0.146, 0.299, 0.447, Inf))) %>%
group_by(partitions) %>%
summarise(x=mean(x), y=mean(y))
df_fit
ggplot(df, aes(x=x, y=y)) + geom_point() +
geom_vline(xintercept = 0.299, colour="hotpink") +
geom_vline(xintercept = 0.447, colour="hotpink") +
geom_vline(xintercept = 0.146, colour="hotpink") +
geom_vline(xintercept = -0.354, colour="hotpink") +
geom_vline(xintercept = 0.044, colour="hotpink") +
geom_vline(xintercept = -0.206, colour="hotpink") +
geom_point(data=df_fit, aes(x=x, y=y),
colour="hotpink", size=3, alpha=0.5)
ggplot(df, aes(x=x, y=y)) + geom_point() +
geom_vline(xintercept = 0.299, colour="hotpink") +
geom_vline(xintercept = 0.447, colour="hotpink") +
geom_vline(xintercept = 0.146, colour="hotpink") +
geom_vline(xintercept = -0.354, colour="hotpink") +
geom_vline(xintercept = 0.044, colour="hotpink") +
geom_vline(xintercept = -0.206, colour="hotpink") +
geom_point(data=df_fit, aes(x=x, y=y),
colour="hotpink", size=5, alpha=0.7)
set.seed(772017)
x=sort(runif(100)-0.5)
df <- data.frame(x, y=c(x[1:50]^2, x[51:75]*2, -x[76:100]^2)+rnorm(100)*0.1)
ggplot(df, aes(x=x, y=y)) + geom_point()
library(rpart)
df_rp <- rpart(y~x, data=df)
df_rp
set.seed(777)
x=sort(runif(100)-0.5)
df <- data.frame(x, y=c(x[1:50]^2, x[51:75]*2, -x[76:100]^2)+rnorm(100)*0.1)
ggplot(df, aes(x=x, y=y)) + geom_point()
unlink('week7.class2_cache', recursive = TRUE)
library(rpart)
df_rp <- rpart(y~x, data=df)
df_rp
str(rp)
str(df_rp)
df_rp$splits
df_rp$splits$index
df_rp$splits[,4]
unlink('week7.class2_cache', recursive = TRUE)
str(df_rp)
str(df_rp$control)
df_rp <- rpart(y~x, data=df, control = rpart.control(minsplit=10, minbucket = 3))
df_rp
df_rp <- rpart(y~x, data=df, control = rpart.control(minsplit=5, minbucket = 2))
df_rp
df_rp <- rpart(y~x, data=df,
control = rpart.control(minsplit=30, minbucket = 10))
df_rp
sst <- var(df$y)*nrow(df)
sst
compute_anova <- function(left, right) {
ssl <- var(left$y)*nrow(df)
ssr <- var(right$y)*nrow(df)
av <- sst - (ssl+ssr)
return(av)
}
i=2
left <- df[1:(i-1),]
right <- df[i:nrow(df),]
aov_f$x <- mean(df$x[c(i-1, i)])
aov_f <- data.frame(x=df$x[-1], f=x=df$y[-1])
aov_f <- data.frame(x=df$x[-1], f=df$y[-1])
aov_f$x <- mean(df$x[c(i-1, i)])
aov_f$f <- compute_anova(left, right)
aov_f[1,]
ssl <- var(left$y)*nrow(df)
ssr <- var(right$y)*nrow(df)
ssl
compute_anova <- function(left, right) {
ssl <- var(left$y)*nrow(left)
if (nrow(left) == 1)
ssl <- 1
ssr <- var(right$y)*nrow(right)
if (nrow(right) == 1)
ssr <- 1
av <- sst - (ssl+ssr)
return(av)
}
aov_f$f <- compute_anova(left, right)
aof_f[1,]
aov_f[1,]
aov_f <- data.frame(x=df$x[-1], f=df$y[-1])
for (i in 2:nrow(df)) {
left <- df[1:(i-1),]
right <- df[i:nrow(df),]
aov_f$x <- mean(df$x[c(i-1, i)])
aov_f$f <- compute_anova(left, right)
}
aof_f
aov_f
aov_f <- data.frame(x=df$x[-1], f=df$y[-1])
for (i in 2:nrow(df)) {
left <- df[1:(i-1),]
right <- df[i:nrow(df),]
aov_f$x[i] <- mean(df$x[c(i-1, i)])
aov_f$f[i] <- compute_anova(left, right)
}
aov_f <- data.frame(x=df$x[-1], f=df$y[-1])
for (i in 2:nrow(df)) {
left <- df[1:(i-1),]
right <- df[i:nrow(df),]
aov_f$x[i-1] <- mean(df$x[c(i-1, i)])
aov_f$f[i-1] <- compute_anova(left, right)
}
aov_f
ggplot(df, aes(x=x, y=y)) + geom_point(alpha=0.5) +
geom_line(data=aov_f, aes(x=x, y=f), colour="hotpink")
+
ggplot(df, aes(x=x, y=y)) + geom_point(alpha=0.5) +
geom_line(data=aov_f, aes(x=x, y=f), colour="hotpink") +
geom_vline(xintercept = df_rp$splits[1,4], colour="hotpink", linetype=2)
ggplot(df, aes(x=x, y=y)) + geom_point(alpha=0.5) +
geom_line(data=aov_f, aes(x=x, y=f), colour="hotpink") +
geom_vline(xintercept = df_rp$splits[1,4], colour="hotpink", linetype=2)
unlink('week7.class2_cache', recursive = TRUE)
?augment
df_rp_aug <- augment(df_rp, df)
df_rp_aug <- col_bind(df, residuals(df_rp))
df_rp_aug <- column_bind(df, residuals(df_rp))
?row_bind
df_rp_aug <- bind_cols(df, residuals(df_rp))
df_rp_aug <- cbind(df, residuals(df_rp))
df_rp_aug
df_rp_aug <- cbind(df, e=residuals(df_rp))
df_rp_aug %>% head
ggplot(df_rp_aug, aes(x=x, y=e)) + geom_point() +
ylab("residuals")
str(df_rp)
df_rp <- rpart(y~x, data=df)
str(df_rp)
deviance(df_rp)
printcp(df_rp)
?printcp
printcp(df_rp, digits=5)
sum(df_rp_aug$e^2)/sst
1-sum(df_rp_aug$e^2)/sst
sst <- var(df$y)*(nrow(df)-1)
1-sum(df_rp_aug$e^2)/sst
1-sum(df_rp_aug$e^2)/sum((df$y-mean(df$y))^2)
printcp(df_rp, digits=3)
0.2160+0.0516+0.3010+0.0205+0.1190+0.0512+0.2470
sum((df$y-mean(df$y))^2)
sqrt(sum((df$y-mean(df$y))^2))
summary(df_rp)
unlink('week7.class2_cache', recursive = TRUE)
1-sum(df_rp_aug$e^2)/sum((df$y-mean(df$y))^2)
unlink('week7.class2_cache', recursive = TRUE)
gof <- printcp(df_rp, digits=3)
str(gof)
gof[7,3]
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 6,
fig.width = 9,
fig.align='center'
)
options(digits=3)
library(tidyverse)
library(gridExtra)
library(broom)
set.seed(8000)
x=sort(runif(100)-0.5)
df <- data.frame(x, y=c(x[1:50]^2, x[51:75]*2, -x[76:100]^2)+rnorm(100)*0.1)
ggplot(df, aes(x=x, y=y)) + geom_point()
library(rpart)
df_rp <- rpart(y~x, data=df)
df_rp
library(rpart.plot)
rpart.plot(df_rp)
df_rp$splits
unlink('week7.class2_cache', recursive = TRUE)
str(tennis_rf)
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 6,
fig.width = 9,
fig.align='center'
)
options(digits=3)
library(tidyverse)
library(gridExtra)
library(broom)
set.seed(8000)
x=sort(runif(100)-0.5)
df <- data.frame(x, y=c(x[1:50]^2, x[51:75]*2, -x[76:100]^2)+rnorm(100)*0.1)
ggplot(df, aes(x=x, y=y)) + geom_point()
df1 <- df %>% sample_n(size=100, replace=TRUE)
df2 <- df %>% sample_n(size=100, replace=TRUE)
p1 <- ggplot(df1, aes(x=x, y=y)) + geom_point(alpha=0.3, size=3) +
xlim(range(df$x)) + ylim(range(df$y)) + ggtitle("Sample 1")
p2 <- ggplot(df2, aes(x=x, y=y)) + geom_point(alpha=0.3, size=3) +
xlim(range(df$x)) + ylim(range(df$y)) + ggtitle("Sample 2")
grid.arrange(p1, p2, ncol=2)
library(rpart)
library(rpart.plot)
df1_rp <- rpart(y~x, data=df1)
rpart.plot(df1_rp)
df2_rp <- rpart(y~x, data=df2)
rpart.plot(df2_rp)
df_rp_aug <- cbind(df, p1=predict(df1_rp, df), p2=predict(df2_rp, df))
df_rp_aug[91:100,]
df_rp_aug <- df_rp_aug %>% mutate(p=(p1+p2)/2)
df_rp_aug[91:100,]
ggplot(df_rp_aug, aes(x=x, y=y)) + geom_point() +
geom_point(aes(y=p), colour="hotpink", alpha=0.7, size=3)
MSE <- function(obs, pred) {
e <- obs - pred
mse <- sum(e^2)/length(e)
return(mse)
}
options(digits=5)
df_rp <- rpart(y~x, df)
df_rp_aug <- cbind(df_rp_aug, full_p=predict(df_rp, df))
MSE(df_rp_aug$y, df_rp_aug$full_p)
MSE(df_rp_aug$y, df_rp_aug$p)
df3 <- df %>% sample_n(size=100, replace=TRUE)
df3_rp <- rpart(y~x, df3)
df_rp_aug <- cbind(df_rp_aug, p3=predict(df3_rp, df))
df4 <- df %>% sample_n(size=100, replace=TRUE)
df4_rp <- rpart(y~x, df4)
df_rp_aug <- cbind(df_rp_aug, p4=predict(df4_rp, df))
df5 <- df %>% sample_n(size=100, replace=TRUE)
df5_rp <- rpart(y~x, df5)
df_rp_aug <- cbind(df_rp_aug, p5=predict(df5_rp, df))
df_rp_aug <- df_rp_aug %>% mutate(p=(p1+p2+p3+p4+p5)/5)
MSE(df_rp_aug$y, df_rp_aug$p)
ggplot(df_rp_aug, aes(x=x, y=y)) + geom_point() +
geom_point(aes(y=p), colour="hotpink", alpha=0.7, size=3)
library(caret)
tennis <- read_csv("../data/tennis_2012_wta_fixed.csv")
indx <- createDataPartition(tennis$won, p=0.67, list=FALSE)
train <- tennis[indx,]
test <- tennis[-indx,]
#train %>% count(won)
#test %>% count(won)
library(randomForest)
tennis_rf <- randomForest(won~Winners+Unforced.Errors+
RPW.TPW+W.minus.Aces+
SPW.TPW+First.Serves.In+Total.Aces+
Total.Double.Faults+First.Serve.Pts.Won+
Receiving.Points.Won+Break.Point.Conversions,
data=train, na.action=na.omit, importance=TRUE)
tennis_rf
str(tennis_rf)
str(summary(tennis_rf))
str(print(tennis_rf))
?randomForest
tennis_rf$mse
tennis_rf$error.rate
tennis_rf$err.rate
mean(tennis_rf$mse)
ntree <- seq(1, 50, 1)
tr_err <- rep(100, length(ntree))
ts_err <- rep(100, length(ntree))
for (i in 1:length(ntree)) {
tennis_rf <- randomForest(won~Winners+Unforced.Errors+
RPW.TPW+W.minus.Aces+
SPW.TPW+First.Serves.In+Total.Aces+
Total.Double.Faults+First.Serve.Pts.Won+
Receiving.Points.Won+Break.Point.Conversions,
data=train, na.action=na.omit, importance=TRUE,
ntree=ntree[i])
tr_err[i] <- tennis_rf$mse[i]
pred <- predict(tennis_rf, test)
ts_err[i] <- MSE(test$won, pred)
}
df <- data.frame(ntree, tr_err, ts_err) %>% gather(type, error, -ntree)
ggplot(df, aes(x=ntree, y=error, colour=type)) + geom_line() + ylim(c(0, 0.35))
ggplot(df, aes(x=ntree, y=error, colour=type)) +
geom_point() + geom_smooth() +
ylim(c(0, 0.35)) + scale_colour_brewer(palette="Dark2")
library(knitr)
opts_chunk$set(
message = FALSE,
warning = FALSE,
cache = FALSE,
echo=FALSE,
fig.height = 6,
fig.width = 9,
fig.align='center'
)
options(digits=3)
library(tidyverse)
library(gridExtra)
library(broom)
set.seed(8000)
x=sort(runif(100)-0.5)
df <- data.frame(x, y=c(x[1:50]^2, x[51:75]*2, -x[76:100]^2)+rnorm(100)*0.1)
ggplot(df, aes(x=x, y=y)) + geom_point()
df1 <- df %>% sample_n(size=100, replace=TRUE)
df2 <- df %>% sample_n(size=100, replace=TRUE)
p1 <- ggplot(df1, aes(x=x, y=y)) + geom_point(alpha=0.3, size=3) +
xlim(range(df$x)) + ylim(range(df$y)) + ggtitle("Sample 1")
p2 <- ggplot(df2, aes(x=x, y=y)) + geom_point(alpha=0.3, size=3) +
xlim(range(df$x)) + ylim(range(df$y)) + ggtitle("Sample 2")
grid.arrange(p1, p2, ncol=2)
library(rpart)
library(rpart.plot)
df1_rp <- rpart(y~x, data=df1)
rpart.plot(df1_rp)
df2_rp <- rpart(y~x, data=df2)
rpart.plot(df2_rp)
df_rp_aug <- cbind(df, p1=predict(df1_rp, df), p2=predict(df2_rp, df))
df_rp_aug[91:100,]
df_rp_aug <- df_rp_aug %>% mutate(p=(p1+p2)/2)
df_rp_aug[91:100,]
ggplot(df_rp_aug, aes(x=x, y=y)) + geom_point() +
geom_point(aes(y=p), colour="hotpink", alpha=0.7, size=3)
MSE <- function(obs, pred) {
e <- obs - pred
mse <- sum(e^2)/length(e)
return(mse)
}
options(digits=5)
df_rp <- rpart(y~x, df)
df_rp_aug <- cbind(df_rp_aug, full_p=predict(df_rp, df))
MSE(df_rp_aug$y, df_rp_aug$full_p)
MSE(df_rp_aug$y, df_rp_aug$p)
df3 <- df %>% sample_n(size=100, replace=TRUE)
df3_rp <- rpart(y~x, df3)
df_rp_aug <- cbind(df_rp_aug, p3=predict(df3_rp, df))
df4 <- df %>% sample_n(size=100, replace=TRUE)
df4_rp <- rpart(y~x, df4)
df_rp_aug <- cbind(df_rp_aug, p4=predict(df4_rp, df))
df5 <- df %>% sample_n(size=100, replace=TRUE)
df5_rp <- rpart(y~x, df5)
df_rp_aug <- cbind(df_rp_aug, p5=predict(df5_rp, df))
df_rp_aug <- df_rp_aug %>% mutate(p=(p1+p2+p3+p4+p5)/5)
MSE(df_rp_aug$y, df_rp_aug$p)
ggplot(df_rp_aug, aes(x=x, y=y)) + geom_point() +
geom_point(aes(y=p), colour="hotpink", alpha=0.7, size=3)
library(caret)
tennis <- read_csv("../data/tennis_2012_wta_fixed.csv")
indx <- createDataPartition(tennis$won, p=0.67, list=FALSE)
train <- tennis[indx,]
test <- tennis[-indx,]
#train %>% count(won)
#test %>% count(won)
library(randomForest)
tennis_rf <- randomForest(won~Winners+Unforced.Errors+
RPW.TPW+W.minus.Aces+
SPW.TPW+First.Serves.In+Total.Aces+
Total.Double.Faults+First.Serve.Pts.Won+
Receiving.Points.Won+Break.Point.Conversions,
data=train, na.action=na.omit, importance=TRUE)
tennis_rf
pred <- predict(tennis_rf, test)
MSE(test$won, pred)
as.data.frame(tennis_rf$importance) %>%
mutate(variable=rownames(tennis_rf$importance)) %>%
arrange(desc(`%IncMSE`))
ntree <- seq(1, 50, 1)
tr_err <- rep(100, length(ntree))
ts_err <- rep(100, length(ntree))
for (i in 1:length(ntree)) {
tennis_rf <- randomForest(won~Winners+Unforced.Errors+
RPW.TPW+W.minus.Aces+
SPW.TPW+First.Serves.In+Total.Aces+
Total.Double.Faults+First.Serve.Pts.Won+
Receiving.Points.Won+Break.Point.Conversions,
data=train, na.action=na.omit, importance=TRUE,
ntree=ntree[i])
tr_err[i] <- tennis_rf$mse[i]
pred <- predict(tennis_rf, test)
ts_err[i] <- MSE(test$won, pred)
}
df <- data.frame(ntree, tr_err, ts_err) %>% gather(type, error, -ntree)
ggplot(df, aes(x=ntree, y=error, colour=type)) +
geom_point() + geom_smooth(se=FALSE) +
ylim(c(0, 0.35)) + scale_colour_brewer(palette="Dark2")
